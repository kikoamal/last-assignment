Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> actual_statement
Rule 2     program -> program actual_statement
Rule 3     actual_statement -> NUMBER statement NEWLINE
Rule 4     statement -> print_statement
Rule 5     statement -> input_statement
Rule 6     statement -> if_statement
Rule 7     statement -> goto_statement
Rule 8     statement -> let_statement
Rule 9     statement -> gosub_statement
Rule 10    statement -> rem_statement
Rule 11    statement -> return_statement
Rule 12    statement -> end_statement
Rule 13    print_statement -> PRINT expr_list
Rule 14    input_statement -> INPUT var_list
Rule 15    if_statement -> IF expression RELOP expression THEN statement
Rule 16    if_statement -> IF expression EQUALS expression THEN statement
Rule 17    goto_statement -> GOTO expression
Rule 18    let_statement -> LET VAR EQUALS expression
Rule 19    gosub_statement -> GOSUB expression
Rule 20    rem_statement -> REM
Rule 21    return_statement -> RETURN
Rule 22    end_statement -> END
Rule 23    expr_list -> expr_list_item
Rule 24    expr_list -> expr_list COMMA expr_list_item
Rule 25    expr_list -> expr_list SEMICOLON expr_list_item
Rule 26    expr_list_item -> expression
Rule 27    expr_list_item -> STRING
Rule 28    var_list -> VAR
Rule 29    var_list -> var_list COMMA VAR
Rule 30    expression -> term
Rule 31    expression -> expression PLUS term
Rule 32    expression -> expression MINUS term
Rule 33    term -> factor
Rule 34    term -> term TIMES factor
Rule 35    term -> term DIVIDE factor
Rule 36    factor -> VAR
Rule 37    factor -> NUMBER
Rule 38    factor -> LPAREN expression RPAREN
Rule 39    factor -> PLUS factor
Rule 40    factor -> MINUS factor
Rule 41    factor -> function
Rule 42    function -> RND LPAREN expr_list RPAREN
Rule 43    function -> USR LPAREN expr_list RPAREN

Terminals, with rules where they appear

COMMA                : 24 29
DIVIDE               : 35
END                  : 22
EQUALS               : 16 18
GOSUB                : 19
GOTO                 : 17
IF                   : 15 16
INPUT                : 14
LET                  : 18
LPAREN               : 38 42 43
MINUS                : 32 40
NEWLINE              : 3
NUMBER               : 3 37
PLUS                 : 31 39
PRINT                : 13
RELOP                : 15
REM                  : 20
RETURN               : 21
RND                  : 42
RPAREN               : 38 42 43
SEMICOLON            : 25
STRING               : 27
THEN                 : 15 16
TIMES                : 34
USR                  : 43
VAR                  : 18 28 29 36
error                : 

Nonterminals, with rules where they appear

actual_statement     : 1 2
end_statement        : 12
expr_list            : 13 24 25 42 43
expr_list_item       : 23 24 25
expression           : 15 15 16 16 17 18 19 26 31 32 38
factor               : 33 34 35 39 40
function             : 41
gosub_statement      : 9
goto_statement       : 7
if_statement         : 6
input_statement      : 5
let_statement        : 8
print_statement      : 4
program              : 2 0
rem_statement        : 10
return_statement     : 11
statement            : 3 15 16
term                 : 30 31 32 34 35
var_list             : 14 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . actual_statement
    (2) program -> . program actual_statement
    (3) actual_statement -> . NUMBER statement NEWLINE

    NUMBER          shift and go to state 3

    program                        shift and go to state 1
    actual_statement               shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . actual_statement
    (3) actual_statement -> . NUMBER statement NEWLINE

    NUMBER          shift and go to state 3

    actual_statement               shift and go to state 4

state 2

    (1) program -> actual_statement .

    NUMBER          reduce using rule 1 (program -> actual_statement .)
    $end            reduce using rule 1 (program -> actual_statement .)


state 3

    (3) actual_statement -> NUMBER . statement NEWLINE
    (4) statement -> . print_statement
    (5) statement -> . input_statement
    (6) statement -> . if_statement
    (7) statement -> . goto_statement
    (8) statement -> . let_statement
    (9) statement -> . gosub_statement
    (10) statement -> . rem_statement
    (11) statement -> . return_statement
    (12) statement -> . end_statement
    (13) print_statement -> . PRINT expr_list
    (14) input_statement -> . INPUT var_list
    (15) if_statement -> . IF expression RELOP expression THEN statement
    (16) if_statement -> . IF expression EQUALS expression THEN statement
    (17) goto_statement -> . GOTO expression
    (18) let_statement -> . LET VAR EQUALS expression
    (19) gosub_statement -> . GOSUB expression
    (20) rem_statement -> . REM
    (21) return_statement -> . RETURN
    (22) end_statement -> . END

    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    IF              shift and go to state 17
    GOTO            shift and go to state 18
    LET             shift and go to state 19
    GOSUB           shift and go to state 20
    REM             shift and go to state 21
    RETURN          shift and go to state 22
    END             shift and go to state 23

    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    input_statement                shift and go to state 7
    if_statement                   shift and go to state 8
    goto_statement                 shift and go to state 9
    let_statement                  shift and go to state 10
    gosub_statement                shift and go to state 11
    rem_statement                  shift and go to state 12
    return_statement               shift and go to state 13
    end_statement                  shift and go to state 14

state 4

    (2) program -> program actual_statement .

    NUMBER          reduce using rule 2 (program -> program actual_statement .)
    $end            reduce using rule 2 (program -> program actual_statement .)


state 5

    (3) actual_statement -> NUMBER statement . NEWLINE

    NEWLINE         shift and go to state 24


state 6

    (4) statement -> print_statement .

    NEWLINE         reduce using rule 4 (statement -> print_statement .)


state 7

    (5) statement -> input_statement .

    NEWLINE         reduce using rule 5 (statement -> input_statement .)


state 8

    (6) statement -> if_statement .

    NEWLINE         reduce using rule 6 (statement -> if_statement .)


state 9

    (7) statement -> goto_statement .

    NEWLINE         reduce using rule 7 (statement -> goto_statement .)


state 10

    (8) statement -> let_statement .

    NEWLINE         reduce using rule 8 (statement -> let_statement .)


state 11

    (9) statement -> gosub_statement .

    NEWLINE         reduce using rule 9 (statement -> gosub_statement .)


state 12

    (10) statement -> rem_statement .

    NEWLINE         reduce using rule 10 (statement -> rem_statement .)


state 13

    (11) statement -> return_statement .

    NEWLINE         reduce using rule 11 (statement -> return_statement .)


state 14

    (12) statement -> end_statement .

    NEWLINE         reduce using rule 12 (statement -> end_statement .)


state 15

    (13) print_statement -> PRINT . expr_list
    (23) expr_list -> . expr_list_item
    (24) expr_list -> . expr_list COMMA expr_list_item
    (25) expr_list -> . expr_list SEMICOLON expr_list_item
    (26) expr_list_item -> . expression
    (27) expr_list_item -> . STRING
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    STRING          shift and go to state 28
    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expr_list                      shift and go to state 25
    expr_list_item                 shift and go to state 26
    expression                     shift and go to state 27
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 16

    (14) input_statement -> INPUT . var_list
    (28) var_list -> . VAR
    (29) var_list -> . var_list COMMA VAR

    VAR             shift and go to state 40

    var_list                       shift and go to state 39

state 17

    (15) if_statement -> IF . expression RELOP expression THEN statement
    (16) if_statement -> IF . expression EQUALS expression THEN statement
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expression                     shift and go to state 41
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 18

    (17) goto_statement -> GOTO . expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expression                     shift and go to state 42
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 19

    (18) let_statement -> LET . VAR EQUALS expression

    VAR             shift and go to state 43


state 20

    (19) gosub_statement -> GOSUB . expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expression                     shift and go to state 44
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 21

    (20) rem_statement -> REM .

    NEWLINE         reduce using rule 20 (rem_statement -> REM .)


state 22

    (21) return_statement -> RETURN .

    NEWLINE         reduce using rule 21 (return_statement -> RETURN .)


state 23

    (22) end_statement -> END .

    NEWLINE         reduce using rule 22 (end_statement -> END .)


state 24

    (3) actual_statement -> NUMBER statement NEWLINE .

    NUMBER          reduce using rule 3 (actual_statement -> NUMBER statement NEWLINE .)
    $end            reduce using rule 3 (actual_statement -> NUMBER statement NEWLINE .)


state 25

    (13) print_statement -> PRINT expr_list .
    (24) expr_list -> expr_list . COMMA expr_list_item
    (25) expr_list -> expr_list . SEMICOLON expr_list_item

    NEWLINE         reduce using rule 13 (print_statement -> PRINT expr_list .)
    COMMA           shift and go to state 45
    SEMICOLON       shift and go to state 46


state 26

    (23) expr_list -> expr_list_item .

    COMMA           reduce using rule 23 (expr_list -> expr_list_item .)
    SEMICOLON       reduce using rule 23 (expr_list -> expr_list_item .)
    NEWLINE         reduce using rule 23 (expr_list -> expr_list_item .)
    RPAREN          reduce using rule 23 (expr_list -> expr_list_item .)


state 27

    (26) expr_list_item -> expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    COMMA           reduce using rule 26 (expr_list_item -> expression .)
    SEMICOLON       reduce using rule 26 (expr_list_item -> expression .)
    NEWLINE         reduce using rule 26 (expr_list_item -> expression .)
    RPAREN          reduce using rule 26 (expr_list_item -> expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 28

    (27) expr_list_item -> STRING .

    COMMA           reduce using rule 27 (expr_list_item -> STRING .)
    SEMICOLON       reduce using rule 27 (expr_list_item -> STRING .)
    NEWLINE         reduce using rule 27 (expr_list_item -> STRING .)
    RPAREN          reduce using rule 27 (expr_list_item -> STRING .)


state 29

    (30) expression -> term .
    (34) term -> term . TIMES factor
    (35) term -> term . DIVIDE factor

    PLUS            reduce using rule 30 (expression -> term .)
    MINUS           reduce using rule 30 (expression -> term .)
    COMMA           reduce using rule 30 (expression -> term .)
    SEMICOLON       reduce using rule 30 (expression -> term .)
    NEWLINE         reduce using rule 30 (expression -> term .)
    RELOP           reduce using rule 30 (expression -> term .)
    EQUALS          reduce using rule 30 (expression -> term .)
    RPAREN          reduce using rule 30 (expression -> term .)
    THEN            reduce using rule 30 (expression -> term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 30

    (39) factor -> PLUS . factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    factor                         shift and go to state 51
    function                       shift and go to state 36

state 31

    (40) factor -> MINUS . factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    factor                         shift and go to state 52
    function                       shift and go to state 36

state 32

    (33) term -> factor .

    TIMES           reduce using rule 33 (term -> factor .)
    DIVIDE          reduce using rule 33 (term -> factor .)
    PLUS            reduce using rule 33 (term -> factor .)
    MINUS           reduce using rule 33 (term -> factor .)
    COMMA           reduce using rule 33 (term -> factor .)
    SEMICOLON       reduce using rule 33 (term -> factor .)
    NEWLINE         reduce using rule 33 (term -> factor .)
    RELOP           reduce using rule 33 (term -> factor .)
    EQUALS          reduce using rule 33 (term -> factor .)
    RPAREN          reduce using rule 33 (term -> factor .)
    THEN            reduce using rule 33 (term -> factor .)


state 33

    (36) factor -> VAR .

    TIMES           reduce using rule 36 (factor -> VAR .)
    DIVIDE          reduce using rule 36 (factor -> VAR .)
    PLUS            reduce using rule 36 (factor -> VAR .)
    MINUS           reduce using rule 36 (factor -> VAR .)
    COMMA           reduce using rule 36 (factor -> VAR .)
    SEMICOLON       reduce using rule 36 (factor -> VAR .)
    NEWLINE         reduce using rule 36 (factor -> VAR .)
    RELOP           reduce using rule 36 (factor -> VAR .)
    EQUALS          reduce using rule 36 (factor -> VAR .)
    RPAREN          reduce using rule 36 (factor -> VAR .)
    THEN            reduce using rule 36 (factor -> VAR .)


state 34

    (37) factor -> NUMBER .

    TIMES           reduce using rule 37 (factor -> NUMBER .)
    DIVIDE          reduce using rule 37 (factor -> NUMBER .)
    PLUS            reduce using rule 37 (factor -> NUMBER .)
    MINUS           reduce using rule 37 (factor -> NUMBER .)
    COMMA           reduce using rule 37 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 37 (factor -> NUMBER .)
    NEWLINE         reduce using rule 37 (factor -> NUMBER .)
    RELOP           reduce using rule 37 (factor -> NUMBER .)
    EQUALS          reduce using rule 37 (factor -> NUMBER .)
    RPAREN          reduce using rule 37 (factor -> NUMBER .)
    THEN            reduce using rule 37 (factor -> NUMBER .)


state 35

    (38) factor -> LPAREN . expression RPAREN
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expression                     shift and go to state 53
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 36

    (41) factor -> function .

    TIMES           reduce using rule 41 (factor -> function .)
    DIVIDE          reduce using rule 41 (factor -> function .)
    PLUS            reduce using rule 41 (factor -> function .)
    MINUS           reduce using rule 41 (factor -> function .)
    COMMA           reduce using rule 41 (factor -> function .)
    SEMICOLON       reduce using rule 41 (factor -> function .)
    NEWLINE         reduce using rule 41 (factor -> function .)
    RELOP           reduce using rule 41 (factor -> function .)
    EQUALS          reduce using rule 41 (factor -> function .)
    RPAREN          reduce using rule 41 (factor -> function .)
    THEN            reduce using rule 41 (factor -> function .)


state 37

    (42) function -> RND . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 54


state 38

    (43) function -> USR . LPAREN expr_list RPAREN

    LPAREN          shift and go to state 55


state 39

    (14) input_statement -> INPUT var_list .
    (29) var_list -> var_list . COMMA VAR

    NEWLINE         reduce using rule 14 (input_statement -> INPUT var_list .)
    COMMA           shift and go to state 56


state 40

    (28) var_list -> VAR .

    COMMA           reduce using rule 28 (var_list -> VAR .)
    NEWLINE         reduce using rule 28 (var_list -> VAR .)


state 41

    (15) if_statement -> IF expression . RELOP expression THEN statement
    (16) if_statement -> IF expression . EQUALS expression THEN statement
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    RELOP           shift and go to state 57
    EQUALS          shift and go to state 58
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 42

    (17) goto_statement -> GOTO expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    NEWLINE         reduce using rule 17 (goto_statement -> GOTO expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 43

    (18) let_statement -> LET VAR . EQUALS expression

    EQUALS          shift and go to state 59


state 44

    (19) gosub_statement -> GOSUB expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    NEWLINE         reduce using rule 19 (gosub_statement -> GOSUB expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 45

    (24) expr_list -> expr_list COMMA . expr_list_item
    (26) expr_list_item -> . expression
    (27) expr_list_item -> . STRING
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    STRING          shift and go to state 28
    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expr_list_item                 shift and go to state 60
    expression                     shift and go to state 27
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 46

    (25) expr_list -> expr_list SEMICOLON . expr_list_item
    (26) expr_list_item -> . expression
    (27) expr_list_item -> . STRING
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    STRING          shift and go to state 28
    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expr_list_item                 shift and go to state 61
    expression                     shift and go to state 27
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 47

    (31) expression -> expression PLUS . term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    term                           shift and go to state 62
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 48

    (32) expression -> expression MINUS . term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    term                           shift and go to state 63
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 49

    (34) term -> term TIMES . factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    factor                         shift and go to state 64
    function                       shift and go to state 36

state 50

    (35) term -> term DIVIDE . factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    factor                         shift and go to state 65
    function                       shift and go to state 36

state 51

    (39) factor -> PLUS factor .

    TIMES           reduce using rule 39 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 39 (factor -> PLUS factor .)
    PLUS            reduce using rule 39 (factor -> PLUS factor .)
    MINUS           reduce using rule 39 (factor -> PLUS factor .)
    COMMA           reduce using rule 39 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 39 (factor -> PLUS factor .)
    NEWLINE         reduce using rule 39 (factor -> PLUS factor .)
    RELOP           reduce using rule 39 (factor -> PLUS factor .)
    EQUALS          reduce using rule 39 (factor -> PLUS factor .)
    RPAREN          reduce using rule 39 (factor -> PLUS factor .)
    THEN            reduce using rule 39 (factor -> PLUS factor .)


state 52

    (40) factor -> MINUS factor .

    TIMES           reduce using rule 40 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 40 (factor -> MINUS factor .)
    PLUS            reduce using rule 40 (factor -> MINUS factor .)
    MINUS           reduce using rule 40 (factor -> MINUS factor .)
    COMMA           reduce using rule 40 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 40 (factor -> MINUS factor .)
    NEWLINE         reduce using rule 40 (factor -> MINUS factor .)
    RELOP           reduce using rule 40 (factor -> MINUS factor .)
    EQUALS          reduce using rule 40 (factor -> MINUS factor .)
    RPAREN          reduce using rule 40 (factor -> MINUS factor .)
    THEN            reduce using rule 40 (factor -> MINUS factor .)


state 53

    (38) factor -> LPAREN expression . RPAREN
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    RPAREN          shift and go to state 66
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 54

    (42) function -> RND LPAREN . expr_list RPAREN
    (23) expr_list -> . expr_list_item
    (24) expr_list -> . expr_list COMMA expr_list_item
    (25) expr_list -> . expr_list SEMICOLON expr_list_item
    (26) expr_list_item -> . expression
    (27) expr_list_item -> . STRING
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    STRING          shift and go to state 28
    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expr_list                      shift and go to state 67
    expr_list_item                 shift and go to state 26
    expression                     shift and go to state 27
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 55

    (43) function -> USR LPAREN . expr_list RPAREN
    (23) expr_list -> . expr_list_item
    (24) expr_list -> . expr_list COMMA expr_list_item
    (25) expr_list -> . expr_list SEMICOLON expr_list_item
    (26) expr_list_item -> . expression
    (27) expr_list_item -> . STRING
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    STRING          shift and go to state 28
    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expr_list                      shift and go to state 68
    expr_list_item                 shift and go to state 26
    expression                     shift and go to state 27
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 56

    (29) var_list -> var_list COMMA . VAR

    VAR             shift and go to state 69


state 57

    (15) if_statement -> IF expression RELOP . expression THEN statement
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expression                     shift and go to state 70
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 58

    (16) if_statement -> IF expression EQUALS . expression THEN statement
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expression                     shift and go to state 71
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 59

    (18) let_statement -> LET VAR EQUALS . expression
    (30) expression -> . term
    (31) expression -> . expression PLUS term
    (32) expression -> . expression MINUS term
    (33) term -> . factor
    (34) term -> . term TIMES factor
    (35) term -> . term DIVIDE factor
    (36) factor -> . VAR
    (37) factor -> . NUMBER
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . PLUS factor
    (40) factor -> . MINUS factor
    (41) factor -> . function
    (42) function -> . RND LPAREN expr_list RPAREN
    (43) function -> . USR LPAREN expr_list RPAREN

    VAR             shift and go to state 33
    NUMBER          shift and go to state 34
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    RND             shift and go to state 37
    USR             shift and go to state 38

    expression                     shift and go to state 72
    term                           shift and go to state 29
    factor                         shift and go to state 32
    function                       shift and go to state 36

state 60

    (24) expr_list -> expr_list COMMA expr_list_item .

    COMMA           reduce using rule 24 (expr_list -> expr_list COMMA expr_list_item .)
    SEMICOLON       reduce using rule 24 (expr_list -> expr_list COMMA expr_list_item .)
    NEWLINE         reduce using rule 24 (expr_list -> expr_list COMMA expr_list_item .)
    RPAREN          reduce using rule 24 (expr_list -> expr_list COMMA expr_list_item .)


state 61

    (25) expr_list -> expr_list SEMICOLON expr_list_item .

    COMMA           reduce using rule 25 (expr_list -> expr_list SEMICOLON expr_list_item .)
    SEMICOLON       reduce using rule 25 (expr_list -> expr_list SEMICOLON expr_list_item .)
    NEWLINE         reduce using rule 25 (expr_list -> expr_list SEMICOLON expr_list_item .)
    RPAREN          reduce using rule 25 (expr_list -> expr_list SEMICOLON expr_list_item .)


state 62

    (31) expression -> expression PLUS term .
    (34) term -> term . TIMES factor
    (35) term -> term . DIVIDE factor

    PLUS            reduce using rule 31 (expression -> expression PLUS term .)
    MINUS           reduce using rule 31 (expression -> expression PLUS term .)
    COMMA           reduce using rule 31 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 31 (expression -> expression PLUS term .)
    NEWLINE         reduce using rule 31 (expression -> expression PLUS term .)
    RELOP           reduce using rule 31 (expression -> expression PLUS term .)
    EQUALS          reduce using rule 31 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 31 (expression -> expression PLUS term .)
    THEN            reduce using rule 31 (expression -> expression PLUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 63

    (32) expression -> expression MINUS term .
    (34) term -> term . TIMES factor
    (35) term -> term . DIVIDE factor

    PLUS            reduce using rule 32 (expression -> expression MINUS term .)
    MINUS           reduce using rule 32 (expression -> expression MINUS term .)
    COMMA           reduce using rule 32 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 32 (expression -> expression MINUS term .)
    NEWLINE         reduce using rule 32 (expression -> expression MINUS term .)
    RELOP           reduce using rule 32 (expression -> expression MINUS term .)
    EQUALS          reduce using rule 32 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 32 (expression -> expression MINUS term .)
    THEN            reduce using rule 32 (expression -> expression MINUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 64

    (34) term -> term TIMES factor .

    TIMES           reduce using rule 34 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 34 (term -> term TIMES factor .)
    PLUS            reduce using rule 34 (term -> term TIMES factor .)
    MINUS           reduce using rule 34 (term -> term TIMES factor .)
    COMMA           reduce using rule 34 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 34 (term -> term TIMES factor .)
    NEWLINE         reduce using rule 34 (term -> term TIMES factor .)
    RELOP           reduce using rule 34 (term -> term TIMES factor .)
    EQUALS          reduce using rule 34 (term -> term TIMES factor .)
    RPAREN          reduce using rule 34 (term -> term TIMES factor .)
    THEN            reduce using rule 34 (term -> term TIMES factor .)


state 65

    (35) term -> term DIVIDE factor .

    TIMES           reduce using rule 35 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 35 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 35 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 35 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 35 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 35 (term -> term DIVIDE factor .)
    NEWLINE         reduce using rule 35 (term -> term DIVIDE factor .)
    RELOP           reduce using rule 35 (term -> term DIVIDE factor .)
    EQUALS          reduce using rule 35 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 35 (term -> term DIVIDE factor .)
    THEN            reduce using rule 35 (term -> term DIVIDE factor .)


state 66

    (38) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    RELOP           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    THEN            reduce using rule 38 (factor -> LPAREN expression RPAREN .)


state 67

    (42) function -> RND LPAREN expr_list . RPAREN
    (24) expr_list -> expr_list . COMMA expr_list_item
    (25) expr_list -> expr_list . SEMICOLON expr_list_item

    RPAREN          shift and go to state 73
    COMMA           shift and go to state 45
    SEMICOLON       shift and go to state 46


state 68

    (43) function -> USR LPAREN expr_list . RPAREN
    (24) expr_list -> expr_list . COMMA expr_list_item
    (25) expr_list -> expr_list . SEMICOLON expr_list_item

    RPAREN          shift and go to state 74
    COMMA           shift and go to state 45
    SEMICOLON       shift and go to state 46


state 69

    (29) var_list -> var_list COMMA VAR .

    COMMA           reduce using rule 29 (var_list -> var_list COMMA VAR .)
    NEWLINE         reduce using rule 29 (var_list -> var_list COMMA VAR .)


state 70

    (15) if_statement -> IF expression RELOP expression . THEN statement
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    THEN            shift and go to state 75
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 71

    (16) if_statement -> IF expression EQUALS expression . THEN statement
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    THEN            shift and go to state 76
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 72

    (18) let_statement -> LET VAR EQUALS expression .
    (31) expression -> expression . PLUS term
    (32) expression -> expression . MINUS term

    NEWLINE         reduce using rule 18 (let_statement -> LET VAR EQUALS expression .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 73

    (42) function -> RND LPAREN expr_list RPAREN .

    TIMES           reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    DIVIDE          reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    PLUS            reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    MINUS           reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    COMMA           reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    SEMICOLON       reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    NEWLINE         reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    RELOP           reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    EQUALS          reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    RPAREN          reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)
    THEN            reduce using rule 42 (function -> RND LPAREN expr_list RPAREN .)


state 74

    (43) function -> USR LPAREN expr_list RPAREN .

    TIMES           reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    DIVIDE          reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    PLUS            reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    MINUS           reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    COMMA           reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    SEMICOLON       reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    NEWLINE         reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    RELOP           reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    EQUALS          reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    RPAREN          reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)
    THEN            reduce using rule 43 (function -> USR LPAREN expr_list RPAREN .)


state 75

    (15) if_statement -> IF expression RELOP expression THEN . statement
    (4) statement -> . print_statement
    (5) statement -> . input_statement
    (6) statement -> . if_statement
    (7) statement -> . goto_statement
    (8) statement -> . let_statement
    (9) statement -> . gosub_statement
    (10) statement -> . rem_statement
    (11) statement -> . return_statement
    (12) statement -> . end_statement
    (13) print_statement -> . PRINT expr_list
    (14) input_statement -> . INPUT var_list
    (15) if_statement -> . IF expression RELOP expression THEN statement
    (16) if_statement -> . IF expression EQUALS expression THEN statement
    (17) goto_statement -> . GOTO expression
    (18) let_statement -> . LET VAR EQUALS expression
    (19) gosub_statement -> . GOSUB expression
    (20) rem_statement -> . REM
    (21) return_statement -> . RETURN
    (22) end_statement -> . END

    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    IF              shift and go to state 17
    GOTO            shift and go to state 18
    LET             shift and go to state 19
    GOSUB           shift and go to state 20
    REM             shift and go to state 21
    RETURN          shift and go to state 22
    END             shift and go to state 23

    statement                      shift and go to state 77
    print_statement                shift and go to state 6
    input_statement                shift and go to state 7
    if_statement                   shift and go to state 8
    goto_statement                 shift and go to state 9
    let_statement                  shift and go to state 10
    gosub_statement                shift and go to state 11
    rem_statement                  shift and go to state 12
    return_statement               shift and go to state 13
    end_statement                  shift and go to state 14

state 76

    (16) if_statement -> IF expression EQUALS expression THEN . statement
    (4) statement -> . print_statement
    (5) statement -> . input_statement
    (6) statement -> . if_statement
    (7) statement -> . goto_statement
    (8) statement -> . let_statement
    (9) statement -> . gosub_statement
    (10) statement -> . rem_statement
    (11) statement -> . return_statement
    (12) statement -> . end_statement
    (13) print_statement -> . PRINT expr_list
    (14) input_statement -> . INPUT var_list
    (15) if_statement -> . IF expression RELOP expression THEN statement
    (16) if_statement -> . IF expression EQUALS expression THEN statement
    (17) goto_statement -> . GOTO expression
    (18) let_statement -> . LET VAR EQUALS expression
    (19) gosub_statement -> . GOSUB expression
    (20) rem_statement -> . REM
    (21) return_statement -> . RETURN
    (22) end_statement -> . END

    PRINT           shift and go to state 15
    INPUT           shift and go to state 16
    IF              shift and go to state 17
    GOTO            shift and go to state 18
    LET             shift and go to state 19
    GOSUB           shift and go to state 20
    REM             shift and go to state 21
    RETURN          shift and go to state 22
    END             shift and go to state 23

    statement                      shift and go to state 78
    print_statement                shift and go to state 6
    input_statement                shift and go to state 7
    if_statement                   shift and go to state 8
    goto_statement                 shift and go to state 9
    let_statement                  shift and go to state 10
    gosub_statement                shift and go to state 11
    rem_statement                  shift and go to state 12
    return_statement               shift and go to state 13
    end_statement                  shift and go to state 14

state 77

    (15) if_statement -> IF expression RELOP expression THEN statement .

    NEWLINE         reduce using rule 15 (if_statement -> IF expression RELOP expression THEN statement .)


state 78

    (16) if_statement -> IF expression EQUALS expression THEN statement .

    NEWLINE         reduce using rule 16 (if_statement -> IF expression EQUALS expression THEN statement .)

